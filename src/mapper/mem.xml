<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="login" resultType="vo.MemberVO" parameterType="java.util.Map">
		SELECT * FROM mem_t
		WHERE m_id = #{m_id} AND m_pw = #{m_pw}
	</select>

	<!-- 회원 검색 전체 목록 -->
	<select id="all_search" parameterType="java.util.Map" resultType="vo.MemberVO">
		SELECT * FROM (
		SELECT rownum AS r_num, a.* FROM (
		SELECT * FROM mem_t
		<!-- ORDER BY c_idx DESC -->
		) a
		) WHERE r_num BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 검색 게시물 select -->
	<select id="search" parameterType="java.util.Map" resultType="vo.MemberVO">
		select * from (
		select rownum r_num, a.* from(
		select * from mem_t
		<choose>
			<when test="c_value == 0">
				where m_name LIKE '%'||#{keyword}||'%'
			</when>
			<when test="c_value == 1">
				where m_id LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				where m_email LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
		<!-- order by c_idx desc -->
		) a
		) where r_num BETWEEN #{begin} AND #{end}
	</select> 

	<!-- 사용자가 목록을 가져오기 위해 전체 회원의 수를 알아야 한다. -->
	<select id="totalCount" resultType="int">
		SELECT COUNT(*) FROM mem_t
	</select>

	<!-- 검색 게시물의 수(count) -->
	<select id="sTotalCount" parameterType="java.util.Map" resultType="int">
		select count(*) from mem_t

		<choose>
			<when test="c_value == 0">
				where m_name LIKE '%'||#{keyword}||'%'
			</when>
			<when test="c_value == 1">
				where m_id LIKE '%'||#{keyword}||'%'
			</when>
			<otherwise>
				where m_email LIKE '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</select>
	
	<!-- 회원 삭제/복구 -->
	<update id="delMem" parameterType="java.util.Map">
		UPDATE mem_t
		SET m_status = #{m_status}
		WHERE m_id = #{m_id} 
	</update>
	<!-- 교육정보 가져오기 -->
	<select id="getEduList" resultType="vo.EduVO">
		SELECT * FROM edu_t
		WHERE e_status = 0 
	</select>
	<!-- 교육정보 선택 -->
	<select id="getEdu" resultType="vo.EduVO" parameterType="String">
		SELECT * FROM edu_t
		WHERE e_idx = #{e_idx}
	</select>
	<!-- 아이디 중복체크 -->
	<select id="checkId" resultType="String" parameterType="String">
		SELECT m_id FROM mem_t
		WHERE m_id = #{m_id}
	</select>
	<!-- 회원가입 -->
	<insert id="addMem" parameterType="java.util.Map">
		INSERT INTO mem_t(m_id,m_pw,m_name,m_birth,m_sex,m_email,m_phone,m_zip,m_addr,m_school,m_major,m_grad,m_process,m_edate,m_type,m_status)
		VALUES(#{m_id},#{m_pw},#{m_name},#{m_birth},#{m_sex},#{m_email},#{m_phone},#{m_zip},#{m_addr},#{m_school},#{m_major},#{m_grad},#{m_process},sysdate,1,0)
	</insert>
	<!-- 비밀번호 변경 -->
	<update id="editPw" parameterType="java.util.Map">
		UPDATE mem_t SET m_pw = #{re_pw} WHERE m_id = #{m_id} AND m_pw = #{m_pw} 
	</update>
	<!-- 회원정보 수정 -->
	<update id="editMem" parameterType="vo.MemberVO">
		UPDATE mem_t SET 
		 m_birth = #{m_birth},m_sex = #{m_sex},
		 m_email = #{m_email},m_phone = #{m_phone},m_zip = #{m_zip},
		 m_addr = #{m_addr},m_school = #{m_school},m_major = #{m_major}, m_grad = #{m_grad}
		 WHERE m_id = #{m_id} 
	</update>
	
</mapper>